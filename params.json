{"name":"meegpipe","tagline":"Scalable and reproducible M/EEG pipelines","body":"meegpipe\r\n========\r\n\r\n_meegpipe_ is a collection of MATLAB tools for building advanced processing\r\npipelines for high density physiological recordings. It is especially\r\nsuited for the processing of high-density [EEG][eeg] and [MEG][meg],\r\nbut can also handle other modalities such as [ECG][ecg], temperature,\r\n[actigraphy][acti], light exposure, etc.\r\n\r\n\r\n[gg]: https://groups.google.com/forum/#!forum/meegpipe\r\n[ggh]: http://germangh.com\r\n[eeg]: http://en.wikipedia.org/wiki/Electroencephalography\r\n[meg]: http://en.wikipedia.org/wiki/Magnetoencephalography\r\n[ecg]: http://en.wikipedia.org/wiki/Electrocardiography\r\n[acti]: http://en.wikipedia.org/wiki/Actigraphy\r\n\r\nIn the documentation below I often assume a Linux-like system (e.g. use of\r\nfrontslashes, `~` to denote home directory, etc). However, _meegpipe_ should\r\nalso run under Windows. If you are using Windows, some of the commands that\r\nappear below might need minor modifications like replacing `~` by your home\r\ndirectory name.\r\n\r\n\r\n## Pre-requisites\r\n\r\nIf you are working at somerengrid (our lab's private computing grid), then all the\r\npre-requisites are already there and you can go directly to the installation instructions.\r\nOtherwise, you will have to install the requirements below.\r\n\r\n\r\n### Fieldtrip and EEGLAB\r\n\r\n[Fieldtrip][ftrip] and [EEGLAB][eeglab] are required mostly for input/output\r\nof data from/to various data formats, and for plotting. Please __do not__ add\r\nFieldtrip and EEGLAB to your MATLAB search path. Instead simply edit\r\n[+meegpipe/meegpipe.ini][meegpipecfg] to include the paths to the root\r\ndirectories of Fieldtrip and EEGLAB on your system.\r\n\r\n[meegpipecfg]: http://github.com/germangh/meegpipe/blob/master/%2Bmeegpipe/meegpipe.ini\r\n[ftrip]: http://fieldtrip.fcdonders.nl/\r\n[eeglab]: http://sccn.ucsd.edu/eeglab/\r\n[fileio]: http://fieldtrip.fcdonders.nl/development/fileio\r\n[matlab-package]: http://www.mathworks.nl/help/matlab/matlab_oop/scoping-classes-with-packages.html\r\n\r\n### Python\r\n\r\nA. Kenneth Reitz has written an excellent guide on\r\n[how to install Python][python-install]. _meegpipe_ requires a Python 2.x\r\ninterpreter, where x is ideally at least 7.\r\n\r\n[python]: http://python.org\r\n[python-install]: http://docs.python-guide.org/en/latest/starting/installation/\r\n\r\nIf your OS is Linux-based (that includes Mac OS X) chances are that Python is\r\nalready installed on your system. In that case, open a terminal and ensure that\r\nyou have the required version of Python:\r\n\r\n\tpython --version\r\n\r\n\r\nOn Mac OS X you may also need to install [XCode][xcode].\r\n\r\n[xcode]: https://developer.apple.com/xcode/\r\n\r\n\r\n### easy_install and pip\r\n\r\n[easy_install][easy_install] and [pip][pip] allow you to easily download and\r\ninstall additional Python modules. First install __easy_install__ by running in a\r\nshell window:\r\n\r\n    wget http://python-distribute.org/distribute_setup.py\r\n    sudo python ./distribute_setup.py\r\n\r\nNow you can use __easy_install__ to install __pip__. Open a shell window and\r\nrun:\r\n\r\n    easy_install pip\r\n\r\n\r\n[easy_install]: https://pypi.python.org/pypi/setuptools#installation-instructions\r\n[pip]: https://pypi.python.org/pypi/pip\r\n\r\n\r\n### Python development tools (Linux only)\r\n\r\nIf your Linux distro uses the [yum package manager][yum] run:\r\n\r\n    sudo yum install python-devel\r\n\r\nIf your Linux distro uses [apt-get][apt-get] then run instead:\r\n\r\n    sudo apt-get install python-dev\r\n\r\n\r\n### Remark\r\n\r\nThe [Remark][remark] python library is required for generating HTML reports.\r\nTo install Remark in Mac OS X and Linux run from the command line:\r\n\r\n[remark]: http://kaba.hilvi.org/remark/remark.htm\r\n\r\n    sudo pip install remark\r\n\r\nIn Windows, open a terminal and run:\r\n\r\n    easy_install pillow\r\n    pip install remark\r\n\r\n\r\n### Inkscape\r\n\r\n[Inkscape][inkscape] is required for generating the thumbnail images that\r\nare embedded in the data processing reports.\r\n\r\n[inkscape]: http://en.dev.inkscape.org/download/\r\n[pygments]: http://pygments.org/\r\n[markdown]: http://freewisdom.org/projects/python-markdown/\r\n[pil]: http://www.pythonware.com/products/pil/\r\n\r\n\r\n### Optional dependencies\r\n\r\nYou are encouraged to install a few [additional components][optional] that can\r\nconsiderably enhance _meegpipe_'s functionality. In particular, it is\r\nstrongly recommended that you use [Google Chrome][gc] to inspect the HTML\r\nreports generated by _meegpipe_.\r\n\r\n\r\n[optional]: ./optional.md\r\n[gc]: www.google.com/chrome\r\n\r\n## Installation\r\n\r\nGet the code in [.zip format](https://github.com/meegpipe/meegpipe/archive/master.zip)\r\nand extract it to a local directory (below I will assume that you used\r\ndirectory `~/meegpipe`). Once this is done you should edit the configuration of\r\n_meegpipe_ by defining the locations of the third-party MATLAB dependencies\r\n(Fieldtrip and EEGLAB) on your system. Do this by following the\r\n instructions in [~/meegpipe/+meegpipe/meegpipe.ini][ini].\r\n\r\n## Basic usage\r\n\r\nBefore anything else you will have to add _meegpipe_ and its dependencies\r\nto your MATLAB search path:\r\n\r\n``````matlab\r\nrestoredefaultpath;\r\naddpath(genpath('~/meegpipe'));\r\nmeegpipe.initialize;\r\n````\r\n\r\nThe commands above will ensure that your MATLAB search path contains __only__\r\nthe MATLAB sources that are needed for _meegpipe_ to run.\r\nNamely, _meegpipe_ itself, and a subset of Fieldtrip and EEGLAB. The\r\n`restoredefaultpath` command is important to ensure that other toolboxes do\r\nnot interfere with _meegpipe_. On the other hand, _meegpipe_ components are\r\nall encapsulated in [MATLAB packages][matlab-pkg], which should prevent\r\n_meegpipe_ interfering with other toolboxes. Thus it should be relatively\r\n safe for you to add the three lines above to your MATLAB [startup][startup]\r\n function so that you don't need to type them every time you start MATLAB.\r\n\r\n[startup]: http://www.mathworks.nl/help/matlab/ref/startup.html\r\n[eeglab]: http://sccn.ucsd.edu/eeglab/\r\n[ftrip]: http://fieldtrip.fcdonders.nl/\r\n[ini]: http://github.com/meegpipe/meegpipe/blob/master/%2Bmeegpipe/meegpipe.ini\r\n[matlab-pkg]: http://www.mathworks.nl/help/matlab/matlab_oop/scoping-classes-with-packages.html\r\n\r\n\r\n### Data import\r\n\r\n````matlab\r\nimport physioset.import.*;\r\n% Import from an .mff file\r\ndata = import(mff, 'myfile.mff');\r\n% Import from an EDF+ file\r\ndata = import(edfplus, 'myfile.edf');\r\n% Import MATLAB built-in numerics\r\ndata = import(matrix, randn(10,10000));\r\n````\r\nAll data importer classes implement an `import()` method, which always\r\nproduces a [physioset][physioset] object. For more information and a list\r\nof available data importers see the [documentation][import-docs].\r\n\r\n\r\n[import-docs]: ./+physioset/+import/README.md\r\n[physioset]: https://github.com/meegpipe/meegpipe/blob/master/%2Bphysioset/%40physioset/README.md\r\n\r\n\r\n\r\n\r\n### Data processing nodes\r\n\r\n\r\n````matlab\r\nimport meegpipe.*;\r\nimport physioset.import.matrix;\r\n\r\ndata = import(matrix, randn(10,10000));\r\n\r\n% Detrend using a 10th order polynomial\r\nmyNode1 = node.detrend.new('PolyOrder', 10);\r\nrun(myNode1, data);\r\n\r\n% Filter data using a tfilter (temporal filter) node\r\n% First build a band-pass filter object\r\nmyFilter = filter.bpfilt('Fp', [0.1 0.3]);\r\n% And then use it to construct the node\r\nmyNode2 = node.tfilter.new('Filter', myFilter);\r\nrun(myNode2, data);\r\n````\r\n\r\nFor more information and a list of available processing nodes, see the\r\n[documenation][nodes-docs].\r\n\r\n[wiki-ref]: http://en.wikipedia.org/wiki/Reference_(computer_science)\r\n[nodes-docs]: ./+meegpipe/+node/README.md\r\n\r\n\r\n### Processing reports\r\n\r\nOne of the great features of _meegpipe_ is that it generates comprehensive\r\nHTML reports for every data processing task. In the example above, you\r\nshould have got a warning saying something like:\r\n\r\n> <strong>Warning</strong>: A new session was created in folder 'session_1' <br>\r\n> In session.session>session.instance at 82 <br>\r\n>  In pset.generate_data at 35 <br>\r\n>  In matrix.import at 62 <br>\r\n\r\nThis means that _meegpipe_ just created a directory `session_1`, which will be\r\nused to store, among other things, the data processing reports. Namely, you can\r\nfind a node's HTML report under:\r\n\r\n    session_1/[DATA].meegpipe/[NODE]_[USR]_[SYS]/remark/index.htm\r\n\r\nwhere\r\n\r\n* __DATA__ is a string identifying the processed [physioset][physioset]. Use\r\n method `get_name()` to find out the name of a [physioset][physioset] object.\r\n\r\n* __NODE__ is a string identifying the _processing node_. It is a combination of\r\n the node name (which can be obtained using method `get_name()`) and a hash code that\r\n summarizes the node configuration.\r\n\r\n* __USR__ is just the name of the user that ran command `run()`.\r\n\r\n* __SYS__ is a string identifying the operating system and MATLAB version (e.g. _PCWIN64-R2011b_).\r\n\r\n\r\n__NOTE for Windows 8 users__: For some unknown reason neither Firefox nor\r\nGoogle Chrome are able to display local .svg files, when running under\r\nWindows 8. Whenever trying to do so, both browsers attempt to download the\r\nfile and thus the file is not displayed. Read the\r\n[document on known issues and limitations][issues] for ways to overcome\r\nthis problem.\r\n[issues]: ./issues.md\r\n\r\n\r\n### Pipelines\r\n\r\nA _pipeline_ is just a concatenation of nodes. With the exception of\r\n[physioset_import][node-physioset_import] nodes, all other node classes always\r\ntake a [physioset][physioset] as input.\r\n\r\n[node-physioset_import]: https://github.com/meegpipe/meegpipe/blob/master/%2Bmeegpipe/%2Bnode/%2Bphysioset_import/%40physioset_import/physioset_import.m\r\n\r\n````matlab\r\nimport meegpipe.*;\r\nimport physioset.import.*;\r\nmyNode1  = node.physioset_import.new('Importer', mff);\r\nmyFilter = filter.bpfilt('Fp', [0.1 0.3]);\r\nmyNode2  = node.tfilter.new('Filter', myFilter);\r\nmyPipe   = node.pipeline.new('NodeList', {myNode1, myNode2});\r\n\r\n% Will read from .mff file, and band-pass filter the data it contains\r\ndata = run(myPipe, 'myfile.mff');\r\n\r\n````\r\n\r\n### Data export\r\n\r\n````matlab\r\n% Create a random EEG physioset\r\nmySensors = sensors.eeg.from_template('egi256');\r\nmySensors = subset(mySensors, 1:10:256);\r\nmyImporter = physioset.import.matrix('Sensors', mySensors);\r\ndata = import(myImporter, randn(26, 2000));\r\n% Export to EEGLAB\r\nmyEEGLABStr = eeglab(data);\r\n% Export to Fieldtrip\r\nmyFTripStr = fieldtrip(data);\r\n````\r\n\r\n## More information\r\n\r\nSee the practical [tutorials](http://github.com/meegpipe/meegpipe/tree/master/tutorials)\r\nfor some typical use cases of _meegpipe_. A high-level description of the API components\r\ncan be found in the [documentation][doc-main], which is still work\r\nin progress.\r\n\r\n[doc-main]: https://github.com/meegpipe/meegpipe/blob/master/%2Bmeegpipe/README.md\r\n\r\n## Attribution\r\n\r\nFor convenience, _meegpipe_ ships together with code from third-parties.\r\nYou can find a comprehensive list [here][attribution].\r\n\r\n[attribution]: https://github.com/meegpipe/meegpipe/blob/master/attribution.md\r\n\r\n\r\n\r\n## License\r\n\r\nAny code that is not part of any of the bundled third-party dependencies\r\n(see [the list][attribution]), is released under the\r\n[Creative Commons Attribution-NonCommercial-ShareAlike licence](http://creativecommons.org/licenses/by-nc-sa/3.0/).\r\n","google":"UA-44767640-1","note":"Don't delete this file! It's used internally to help with page regeneration."}