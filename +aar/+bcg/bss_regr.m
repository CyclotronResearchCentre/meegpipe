function myNode = bss_regr(varargin)
% BSS - BCG correction using Blind Source Separation and regression

import meegpipe.node.*;

mySel1 = pset.selector.class_selector('Class', 'EEG');
mySel2 = pset.selector.good_data;
mySel  = pset.selector.cascade(mySel1, mySel2);

myPCA = spt.pca('RetainedVar', 99.9);
tpcaFilter = filter.tpca('Order', @(sr) min(50, ceil(sr/10)), 'PCA', myPCA);
tpcaFilter = filter.sliding_window(tpcaFilter, ...
    'WindowLength', @(sr) 30*sr, ...
    'WindowOverlap', 50);

myRegrFilter = filter.mlag_regr('Order', 10);
myRegrFilter = filter.sliding_window(...
    'Filter',        myRegrFilter, ...
    'WindowLength',  @(sr) sr*10, ...
    'WindowOverlap', 50);

myFeat = spt.feature.qrs_erp(...
    'Duration',  0.7, ...
    'Offset',    0.02 ...
    );

myCrit = spt.criterion.threshold(myFeat

myNode = bss.new(...
    'DataSelector', mySel, ...
    'BSS',          spt.bss.multicombi, ...
    'PCA',          spt.pca('RetainedVar', 99.99, 'MaxCard', 40), ...
    'Filter',       tpcaFilter, ...
    'RegrFilter',   myRegrFilter, ...
    'Criterion',    myCrit, ...
    varargin{:});
    

end